{"version":3,"sources":["components/Wrapper/index.js","components/Table/index.js","components/TableHead/index.js","components/TableBody/index.js","components/TableRow/index.js","components/TableRowHeader/index.js","components/Header/index.js","components/Row/index.js","components/Dropdown/index.js","components/DropdownItemButton/index.js","components/ResetButton/index.js","components/SearchForm/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","className","children","Table","TableHead","TableBody","TableRow","scope","id","first_name","last_name","department","role","email","TableRowHeader","name","Header","Row","Dropdown","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","DropdownItemButton","onClick","function","ResetButton","resetTable","SearchForm","value","firstName","onChange","firstInputChange","placeholder","searchFirstName","lastName","lastInputChange","searchLastName","defaultState","employees","employeesKeys","Object","keys","join","replace","split","map","s","substring","toUpperCase","departments","employee","filter","item","index","indexOf","roles","App","state","sortCriteria","e","sortArr","target","sort","a","b","setState","filterDepartment","deptArr","filterRole","roleArr","resetArr","console","log","foundEmployees","preventDefault","includes","alert","employeeName","key","this","office_ext","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"ihGAYeA,MATf,SAAiBC,GAEb,OACI,yBAAKC,UAAU,aACVD,EAAME,W,MCEJC,MANf,SAAeH,GACX,OACI,2BAAOC,UAAU,sCAAsCD,EAAME,W,MCStDE,MAVf,SAAmBJ,GACf,OACI,2BAAOC,UAAU,cACb,4BACKD,EAAME,Y,MCIRG,MANf,SAAmBL,GACf,OACI,+BAAQA,EAAME,W,MCWPI,MAbf,SAAkBN,GACd,OACI,4BACI,wBAAIO,MAAM,OAAOP,EAAMQ,IACvB,4BAAKR,EAAMS,YACX,4BAAKT,EAAMU,WACX,4BAAKV,EAAMW,YACX,4BAAKX,EAAMY,MACX,4BAAKZ,EAAMa,S,MCJRC,MAPf,SAAwBd,GAEpB,OACI,wBAAIO,MAAM,OAAOP,EAAMe,O,MCMhBC,MATf,SAAgBhB,GAEZ,OACI,4BAAQC,UAAU,OACd,wBAAIA,UAAU,mBAAmBD,EAAME,Y,MCKpCe,MATf,SAAajB,GAET,OACI,yBAAKC,UAAU,8BACVD,EAAME,W,MCWJgB,MAff,SAAkBlB,GAEd,OACI,yBAAKC,UAAU,YACX,4BAAQA,UAAU,oCAAoCkB,KAAK,SAASX,GAAG,qBAAqBY,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACjJtB,EAAMmB,MAEX,yBAAKlB,UAAU,gBAAgBsB,kBAAgB,sBAC1CvB,EAAME,Y,MCDRsB,MAPf,SAA4BxB,GAExB,OACI,4BAAQC,UAAU,gBAAgBwB,QAASzB,EAAM0B,SAAUX,KAAMf,EAAMe,MAAOf,EAAMe,O,MCM7EY,MATf,SAAqB3B,GAEjB,OACI,4BAAQC,UAAU,6BAA6BkB,KAAK,SAASM,QAASzB,EAAM4B,YACvE5B,EAAME,W,MCqBJ2B,MAzBf,SAAoB7B,GAEhB,OACI,6BACI,0BAAMC,UAAU,QACZ,2BACI6B,MAAO9B,EAAM+B,UACbhB,KAAK,YACLiB,SAAUhC,EAAMiC,iBAChBd,KAAK,OACLe,YAAY,yBAEhB,4BAAQjC,UAAU,gBAAgBwB,QAASzB,EAAMmC,iBAAjD,UACA,2BACIL,MAAO9B,EAAMoC,SACbrB,KAAK,WACLiB,SAAUhC,EAAMqC,gBAChBlB,KAAK,OACLe,YAAY,wBAEhB,4BAAQjC,UAAU,gBAAgBwB,QAASzB,EAAMsC,gBAAjD,a,OCNVC,G,MAAe,CAAEC,cAGnBC,EAAgBC,OAAOC,KAAKJ,EAAaC,UAAU,IACvDC,EAAgBA,EACbG,KAAK,KACLC,QAAQ,MAAO,KACfC,MAAM,KACNC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,UAAU,EAAG,GACtBC,cAAgBF,EAAEC,UAAU,MAGjC,IAAIE,EAAcZ,EAAaC,UAAUO,KAAI,SAAAK,GAAQ,OAAIA,EAASzC,cAClEwC,EAAcA,EAAYE,QAAO,SAACC,EAAMC,GAAP,OAAiBJ,EAAYK,QAAQF,KAAUC,KAGhF,IAAIE,EAAQlB,EAAaC,UAAUO,KAAI,SAAAK,GAAQ,OAAIA,EAASxC,QAC5D6C,EAAQA,EAAMJ,QAAO,SAACC,EAAMC,GAAP,OAAiBE,EAAMD,QAAQF,KAAUC,K,IAqL/CG,E,4MA/KbC,MAAQ,CACNnB,UAAWA,EACXT,UAAW,GACXK,SAAU,I,EAIZwB,aAAe,SAAAC,GACb,IACIC,EACJ,OAFiBD,EAAEE,OAAOhD,MAGxB,IAAK,aACH+C,EAAU,EAAKH,MAAMnB,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExD,WAAayD,EAAEzD,WAAc,GAAK,KACnF,MACF,IAAK,YACHqD,EAAU,EAAKH,MAAMnB,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEvD,UAAYwD,EAAExD,UAAa,GAAK,KACjF,MACF,IAAK,aACHoD,EAAU,EAAKH,MAAMnB,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtD,WAAauD,EAAEvD,WAAc,GAAK,KACnF,MACF,IAAK,OACHmD,EAAU,EAAKH,MAAMnB,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAErD,KAAOsD,EAAEtD,KAAQ,GAAK,KACvE,MACF,IAAK,QACHkD,EAAU,EAAKH,MAAMnB,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpD,MAAQqD,EAAErD,MAAS,GAAK,KACzE,MACF,QACEiD,EAAU,EAAKH,MAAMnB,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,GAAK0D,EAAE1D,GAAM,GAAK,KAGvE,EAAK2D,SAAS,CAAE3B,UAAWsB,K,EAI7BM,iBAAmB,SAAAP,GACjB,IAAMlD,EAAakD,EAAEE,OAAOhD,KACtBsD,EAAU9B,EAAaC,UAAUa,QAAO,SAAAD,GAAQ,OAAIA,EAASzC,aAAeA,KAClF,EAAKwD,SAAS,CAAE3B,UAAW6B,K,EAI7BC,WAAa,SAAAT,GACX,IAAMjD,EAAOiD,EAAEE,OAAOhD,KAClBwD,EAAUhC,EAAaC,UAAUa,QAAO,SAAAD,GAAQ,OAAIA,EAASxC,OAASA,KAC1E,EAAKuD,SAAS,CAAE3B,UAAW+B,K,EAI7B3C,WAAa,WACX,IAAI4C,EAAWjC,EAAaC,UAAUwB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzD,GAAK0D,EAAE1D,GAAM,GAAK,KAC1E,EAAK2D,SAAS,CAAE3B,UAAWgC,K,EAG7BvC,iBAAmB,SAAA4B,GACjB,IAAI/B,EAAQ+B,EAAEE,OAAOjC,MAErB,EAAKqC,SAAS,CACZpC,UAAWD,IAEb2C,QAAQC,IAAI,EAAKf,MAAM5B,Y,EAGzBM,gBAAkB,SAAAwB,GAChB,IAAI/B,EAAQ+B,EAAEE,OAAOjC,MAErB,EAAKqC,SAAS,CACZ/B,SAAUN,IAEZ2C,QAAQC,IAAI,EAAKf,MAAMvB,W,EAGzBD,gBAAkB,SAAA0B,GAEhB,IAAIc,EADJd,EAAEe,iBAEFH,QAAQC,IAAI,EAAKf,MAAM5B,WACnBQ,EAAaC,UAAUO,KAAI,SAAAK,GAAQ,OAAIA,EAAS3C,cAAYoE,SAAS,EAAKlB,MAAM5B,YAClF4C,EAAiBpC,EAAaC,UAAUa,QAAO,SAAAD,GAAQ,OAAIA,EAAS3C,aAAe,EAAKkD,MAAM5B,aAC9F,EAAKoC,SAAS,CAAE3B,UAAWmC,KAE3BG,MAAM,GAAD,OAAI,EAAKnB,MAAMoB,aAAf,8BAEP,EAAKZ,SAAS,CAAEpC,UAAW,M,EAG7BO,eAAiB,SAAAuB,GAEf,IAAIc,EADJd,EAAEe,iBAEFH,QAAQC,IAAIb,EAAEE,QACdU,QAAQC,IAAI,EAAKf,MAAMvB,UACnBG,EAAaC,UAAUO,KAAI,SAAAK,GAAQ,OAAIA,EAAS1C,aAAWmE,SAAS,EAAKlB,MAAMvB,WACjFuC,EAAiBpC,EAAaC,UAAUa,QAAO,SAAAD,GAAQ,OAAIA,EAAS1C,YAAc,EAAKiD,MAAMvB,YAC7F,EAAK+B,SAAS,CAAE3B,UAAWmC,KAE3BG,MAAM,GAAD,OAAI,EAAKnB,MAAMoB,aAAf,8BAEP,EAAKZ,SAAS,CAAE/B,SAAU,M,uDAGlB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,2BAGA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjB,KAAK,QACZsB,EAAcM,KAAI,SAAAiC,GAAG,OACpB,kBAAC,EAAD,CACEA,IAAKA,EACLjE,KAAMiE,EACNtD,SAAU,EAAKkC,mBAIrB,kBAAC,EAAD,CAAUzC,KAAK,wBACZgC,EAAYJ,KAAI,SAAApC,GAAU,OACzB,kBAAC,EAAD,CACEqE,IAAKrE,EACLI,KAAMJ,EACNe,SAAU,EAAK0C,uBAIrB,kBAAC,EAAD,CAAUjD,KAAK,kBACZsC,EAAMV,KAAI,SAAAnC,GAAI,OACb,kBAAC,EAAD,CACEoE,IAAKpE,EACLG,KAAMH,EACNc,SAAU,EAAK4C,iBAIrB,kBAAC,EAAD,CAAa1C,WAAYqD,KAAKrD,YAA9B,gBAIF,kBAAC,EAAD,KACE,kBAAC,EAAD,CACAG,UAAWkD,KAAKtB,MAAM5B,UACtBE,iBAAkBgD,KAAKhD,iBACvBE,gBAAiB8C,KAAK9C,gBACtBC,SAAU6C,KAAKtB,MAAMvB,SACrBC,gBAAiB4C,KAAK5C,gBACtBC,eAAgB2C,KAAK3C,kBAGvB,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGG,EAAcM,KAAI,SAAAiC,GAAG,OACpB,kBAAC,EAAD,CACAA,IAAKA,EACLjE,KAAMiE,QAIV,kBAAC,EAAD,KACGC,KAAKtB,MAAMnB,UAAUO,KAAI,SAAAK,GAAQ,OAChC,kBAAC,EAAD,CACE4B,IAAK5B,EAAS5C,GACdA,GAAI4C,EAAS5C,GACbC,WAAY2C,EAAS3C,WACrBC,UAAW0C,EAAS1C,UACpBC,WAAYyC,EAASzC,WACrBC,KAAMwC,EAASxC,KACfC,MAAOuC,EAASvC,MAChBqE,WAAY9B,EAAS8B,uB,GAxKnBC,IAAMC,WCzBJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAMC,c","file":"static/js/main.04f4f745.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Table(props) {\n    return (\n        <table className=\"table table-striped bordered hover\">{props.children}</table>\n    )\n}\n\nexport default Table;","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction TableHead(props) {\n    return (\n        <thead className=\"thead-dark\">\n            <tr>\n                {props.children}\n            </tr>\n        </thead>\n    )\n}\n\nexport default TableHead;","import React from \"react\";\nimport \"./style.css\";\n\n\n\n\nfunction TableBody(props) {\n    return (\n        <tbody>{props.children}</tbody>\n    )\n}\n\nexport default TableBody;","import React from \"react\";\nimport \"./style.css\";\n\n\n\n\nfunction TableRow(props) {\n    return (\n        <tr>\n            <th scope=\"row\">{props.id}</th>\n            <td>{props.first_name}</td>\n            <td>{props.last_name}</td>\n            <td>{props.department}</td>\n            <td>{props.role}</td>\n            <td>{props.email}</td>\n        </tr>\n    )\n}\n\nexport default TableRow;","import React from \"react\";\nimport \"./style.css\";\n\nfunction TableRowHeader(props) {\n\n    return (\n        <th scope=\"col\">{props.name}</th>\n    )\n}\n\nexport default TableRowHeader; ","import React from \"react\";\nimport \"./style.css\"\n\nfunction Header(props) {\n\n    return (\n        <header className=\"row\">\n            <h1 className=\"col text-center\">{props.children}</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Row(props) {\n\n    return (\n        <div className=\"row justify-content-center\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Row;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Dropdown(props) {\n\n    return (\n        <div className=\"dropdown\">\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                {props.type}\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Dropdown;","import React from \"react\";\nimport \"./style.css\";\n\nfunction DropdownItemButton(props) {\n\n    return(\n        <button className=\"dropdown-item\" onClick={props.function} name={props.name}>{props.name}</button>\n    )\n}\n\nexport default DropdownItemButton;","import React from \"react\";\nimport \"./style.css\";\n\nfunction ResetButton(props) {\n\n    return (\n        <button className=\"btn btn-secondary dropdown\" type=\"button\" onClick={props.resetTable}>\n            {props.children}\n        </button>\n    )\n}\n\nexport default ResetButton;","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchForm(props) {\n\n    return (\n        <div>\n            <form className=\"form\">\n                <input\n                    value={props.firstName}\n                    name=\"firstName\"\n                    onChange={props.firstInputChange}\n                    type=\"text\"\n                    placeholder=\"Search by First Name\"\n                />\n                <button className=\"submit-button\" onClick={props.searchFirstName}>Submit</button>\n                <input\n                    value={props.lastName}\n                    name=\"lastName\"\n                    onChange={props.lastInputChange}\n                    type=\"text\"\n                    placeholder=\"Search by Last Name\"\n                />\n                <button className=\"submit-button\" onClick={props.searchLastName}>Submit</button>\n            </form>\n        </div>)\n}\n\nexport default SearchForm; ","import React from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Table from \"./components/Table\";\nimport TableHead from \"./components/TableHead\";\nimport TableBody from \"./components/TableBody\";\nimport TableRow from \"./components/TableRow\";\nimport TableRowHeader from \"./components/TableRowHeader\";\nimport Header from \"./components/Header\";\nimport Row from \"./components/Row\";\nimport Dropdown from \"./components/Dropdown\";\nimport DropdownItemButton from \"./components/DropdownItemButton\";\nimport ResetButton from \"./components/ResetButton\";\nimport SearchForm from \"./components/SearchForm\";\nimport employees from \"./employees.json\";\nimport './App.css';\n\n//store default state so that each filter uses the entire employees object\nconst defaultState = { employees };\n\n//grab key properties from employees\nlet employeesKeys = Object.keys(defaultState.employees[0]);\nemployeesKeys = employeesKeys\n  .join(\",\")\n  .replace(/_/gi, \" \")\n  .split(\",\")\n  .map(s => s.substring(0, 1)\n    .toUpperCase() + s.substring(1));\n\n//create an array of all departments\nlet departments = defaultState.employees.map(employee => employee.department);\ndepartments = departments.filter((item, index) => departments.indexOf(item) === index);\n\n//create an array of all roles\nlet roles = defaultState.employees.map(employee => employee.role);\nroles = roles.filter((item, index) => roles.indexOf(item) === index);\n\n\nclass App extends React.Component {\n\n  //setting this.state with defaultState\n  state = {\n    employees: employees,\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  //sort functions\n  sortCriteria = e => {\n    const criteria = e.target.name;\n    let sortArr;\n    switch (criteria) {\n      case \"First name\":\n        sortArr = this.state.employees.sort((a, b) => (a.first_name > b.first_name) ? 1 : -1);\n        break;\n      case \"Last name\":\n        sortArr = this.state.employees.sort((a, b) => (a.last_name > b.last_name) ? 1 : -1);\n        break;\n      case \"Department\":\n        sortArr = this.state.employees.sort((a, b) => (a.department > b.department) ? 1 : -1);\n        break;\n      case \"Role\":\n        sortArr = this.state.employees.sort((a, b) => (a.role > b.role) ? 1 : -1);\n        break;\n      case \"Email\":\n        sortArr = this.state.employees.sort((a, b) => (a.email > b.email) ? 1 : -1);\n        break;\n      default:\n        sortArr = this.state.employees.sort((a, b) => (a.id > b.id) ? 1 : -1);\n        break;\n    }\n    this.setState({ employees: sortArr });\n  }\n\n  //filter by department\n  filterDepartment = e => {\n    const department = e.target.name;\n    const deptArr = defaultState.employees.filter(employee => employee.department === department);\n    this.setState({ employees: deptArr });\n  }\n\n  //filter by role\n  filterRole = e => {\n    const role = e.target.name;\n    let roleArr = defaultState.employees.filter(employee => employee.role === role);\n    this.setState({ employees: roleArr });\n  }\n\n  //reset table to default state ordered by id\n  resetTable = () => {\n    let resetArr = defaultState.employees.sort((a, b) => (a.id > b.id) ? 1 : -1);\n    this.setState({ employees: resetArr });\n  }\n\n  firstInputChange = e => {\n    let value = e.target.value;\n\n    this.setState({\n      firstName: value\n    });\n    console.log(this.state.firstName);\n  }\n\n  lastInputChange = e => {\n    let value = e.target.value;\n\n    this.setState({\n      lastName: value\n    });\n    console.log(this.state.lastName);\n  }\n\n  searchFirstName = e => {\n    e.preventDefault();\n    let foundEmployees;\n    console.log(this.state.firstName);\n    if (defaultState.employees.map(employee => employee.first_name).includes(this.state.firstName)) {\n      foundEmployees = defaultState.employees.filter(employee => employee.first_name === this.state.firstName);\n      this.setState({ employees: foundEmployees })\n    } else {\n      alert(`${this.state.employeeName} is not in this database.`)\n    }    \n    this.setState({ firstName: \"\" });\n  }\n    \n  searchLastName = e => {\n    e.preventDefault();\n    let foundEmployees;\n    console.log(e.target);\n    console.log(this.state.lastName);\n    if (defaultState.employees.map(employee => employee.last_name).includes(this.state.lastName)) {\n      foundEmployees = defaultState.employees.filter(employee => employee.last_name === this.state.lastName);\n      this.setState({ employees: foundEmployees })\n    } else {\n      alert(`${this.state.employeeName} is not in this database.`)\n    }    \n    this.setState({ lastName: \"\" });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header>\n          Employee Directory\n        </Header>\n        <Row>\n          <Dropdown type=\"Sort\">\n            {employeesKeys.map(key => (\n              <DropdownItemButton\n                key={key}\n                name={key}\n                function={this.sortCriteria}\n              />\n            ))}\n          </Dropdown>\n          <Dropdown type=\"Filter by Department\">\n            {departments.map(department => (\n              <DropdownItemButton\n                key={department}\n                name={department}\n                function={this.filterDepartment}\n              />\n            ))}\n          </Dropdown>\n          <Dropdown type=\"Filter by Role\">\n            {roles.map(role => (\n              <DropdownItemButton\n                key={role}\n                name={role}\n                function={this.filterRole}\n              />\n            ))}\n          </Dropdown>\n          <ResetButton resetTable={this.resetTable}>\n            Reset Table\n          </ResetButton>\n        </Row>\n        <Row>\n          <SearchForm \n          firstName={this.state.firstName}\n          firstInputChange={this.firstInputChange}\n          searchFirstName={this.searchFirstName}\n          lastName={this.state.lastName}\n          lastInputChange={this.lastInputChange}\n          searchLastName={this.searchLastName}\n          />\n        </Row>\n        <Table>\n          <TableHead>\n            {employeesKeys.map(key => (\n              <TableRowHeader\n              key={key}\n              name={key}\n              />\n            ))}\n          </TableHead>\n          <TableBody>\n            {this.state.employees.map(employee => (\n              <TableRow\n                key={employee.id}\n                id={employee.id}\n                first_name={employee.first_name}\n                last_name={employee.last_name}\n                department={employee.department}\n                role={employee.role}\n                email={employee.email}\n                office_ext={employee.office_ext}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}