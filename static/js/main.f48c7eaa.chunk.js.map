{"version":3,"sources":["components/Wrapper/index.js","components/Table/index.js","components/TableHead/index.js","components/TableBody/index.js","components/TableRow/index.js","components/Header/index.js","components/ButtonRow/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","className","children","Table","TableHead","scope","TableBody","TableRow","id","first_name","last_name","department","role","email","Header","ButtonRow","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","sortId","sortFirstName","sortLastName","sortDepartment","sortRole","sortEmail","filterDepartment","name","filterRole","resetTable","defaultState","employees","App","state","resetArr","sort","a","b","setState","event","target","deptArr","filter","employee","roleArr","sortIdArr","sortFirstNameArr","sortLastNameArr","sortDepartmentArr","sortRoleArr","sortEmailArr","this","map","key","office_ext","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f48c7eaa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Table(props) {\n    return (\n        <table className=\"table table-striped bordered hover\">{props.children}</table>\n    )\n}\n\nexport default Table;","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction TableHead() {\n    return (\n        <thead className=\"thead-dark\">\n            <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Department</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Email</th>\n            </tr>\n        </thead>\n    )\n}\n\nexport default TableHead;","import React from \"react\";\nimport \"./style.css\";\n\n\n\n\nfunction TableBody(props) {\n    return (\n        <tbody>{props.children}</tbody>\n    )\n}\n\nexport default TableBody;","import React from \"react\";\nimport \"./style.css\";\n\n\n\n\nfunction TableRow(props) {\n    return (\n        <tr>\n            <th scope=\"row\">{props.id}</th>\n            <td>{props.first_name}</td>\n            <td>{props.last_name}</td>\n            <td>{props.department}</td>\n            <td>{props.role}</td>\n            <td>{props.email}</td>\n        </tr>\n    )\n}\n\nexport default TableRow;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Header(props) {\n\n    return (\n        <header className=\"row\">\n            <h1 className=\"col text-center\">{props.children}</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction ButtonRow(props) {\n\n    return (\n        <div className=\"row\">\n            <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Sort\n                    </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <button className=\"dropdown-item\" onClick={props.sortId}>Id</button>\n                    <button className=\"dropdown-item\" onClick={props.sortFirstName}>First Name</button>\n                    <button className=\"dropdown-item\" onClick={props.sortLastName}>Last Name</button>\n                    <button className=\"dropdown-item\" onClick={props.sortDepartment}>Department</button>\n                    <button className=\"dropdown-item\" onClick={props.sortRole}>Role</button>\n                    <button className=\"dropdown-item\" onClick={props.sortEmail}>Email</button>\n                </div>\n            </div>\n\n\n            <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Find by Department\n                    </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name={\"Management\"}>Management</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Sales\">Sales</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Accounting\">Accounting</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Supplier Relations\">Supplier Relations</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Quality Assurance\">Quality Assurance</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Reception\">Reception</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Customer Relations\">Customer Relations</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Intern\">Intern</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} name=\"Warehouse\">Warehouse</button>\n                    <button className=\"dropdown-item\" onClick={props.filterDepartment} department=\"Human Resources\">Human Resources</button>\n                </div>\n            </div>\n\n            <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Find by Role\n                    </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Regional Manager\">Regional Manager\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Sales Lead\">Sales Lead\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Salesperson\">Salesperson\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Lead Accountant\">Lead Accountant\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Accountant\">Accountant\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Representative\">Representative\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"That's Right\">That's Right\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Receptionist\">Receptionist\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Intern\">Intern\n                        </button>\n                    <button className=\"dropdown-item\" onClick={props.filterRole} name=\"Warehouse Manager\">Warehouse Manager\n                        </button>\n                </div>\n            </div>\n\n            <button className=\"btn btn-secondary dropdown\" type=\"button\" id=\"resetTable\" onClick={props.resetTable}>\n                Reset Table\n        </button>\n        </div>\n    )\n}\n\nexport default ButtonRow;","import React from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Table from \"./components/Table\";\nimport TableHead from \"./components/TableHead\";\nimport TableBody from \"./components/TableBody\";\nimport TableRow from \"./components/TableRow\";\nimport Header from \"./components/Header\";\nimport ButtonRow from \"./components/ButtonRow\";\nimport employees from \"./employees.json\";\nimport './App.css';\n\n\nconst defaultState = { employees };\n\nclass App extends React.Component {\n\n  state = defaultState;\n\n  //reset table to default state ordered by id\n  resetTable = () => {\n    let resetArr = defaultState.employees.sort((a, b) => (a.id > b.id) ? 1 : -1);\n    this.setState({ employees: resetArr });\n  }\n\n  //filter by department\n  filterDepartment = event => {\n    const department = event.target.name;\n    const deptArr = this.state.employees.filter(employee => employee.department === department);\n    this.setState({ employees: deptArr });\n  }\n\n  //filter by role\n  filterRole = event => {\n    const role = event.target.name;\n    let roleArr = this.state.employees.filter(employee => employee.role === role);\n    this.setState({ employees: roleArr });\n  }\n\n  //sort functions\n  sortId = () => {\n    let sortIdArr = this.state.employees.sort((a, b) => (a.id > b.id) ? 1 : -1);\n    this.setState({ employees: sortIdArr });\n  }\n\n  sortFirstName = () => {\n    let sortFirstNameArr = this.state.employees.sort((a, b) => (a.first_name > b.first_name) ? 1 : -1);\n    this.setState({ employees: sortFirstNameArr });\n  }\n\n  sortLastName = () => {\n    let sortLastNameArr = this.state.employees.sort((a, b) => (a.last_name > b.last_name) ? 1 : -1);\n    this.setState({ employees: sortLastNameArr });\n  }\n\n  sortDepartment = () => {\n    let sortDepartmentArr = this.state.employees.sort((a, b) => (a.department > b.department) ? 1 : -1);\n    this.setState({ employees: sortDepartmentArr });\n  }\n\n  sortRole = () => {\n    let sortRoleArr = this.state.employees.sort((a, b) => (a.role > b.role) ? 1 : -1);\n    this.setState({ employees: sortRoleArr });\n  }\n\n  sortEmail = () => {\n    let sortEmailArr = this.state.employees.sort((a, b) => (a.email > b.email) ? 1 : -1);\n    this.setState({ employees: sortEmailArr });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header>\n          Employee Directory\n        </Header>\n        <ButtonRow\n          // handleClick={this.handleClick}\n          filterDepartment={this.filterDepartment}\n\n          //Roles\n          filterRole={this.filterRole}\n\n          //Sort\n          sortId={this.sortId}\n          sortFirstName={this.sortFirstName}\n          sortLastName={this.sortLastName}\n          sortDepartment={this.sortDepartment}\n          sortRole={this.sortRole}\n          sortEmail={this.sortEmail}\n\n          //Reset form\n          resetTable={this.resetTable}\n        />\n        <Table>\n          <TableHead />\n          <TableBody>\n            {this.state.employees.map(employee => (\n              <TableRow\n                key={employee.id}\n                id={employee.id}\n                first_name={employee.first_name}\n                last_name={employee.last_name}\n                department={employee.department}\n                role={employee.role}\n                email={employee.email}\n                office_ext={employee.office_ext}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Wrapper>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}